name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: 'go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8
        with:
          version: latest

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: '20'

      - name: Install prettier
        run: npm install --no-save prettier

      - name: Check markdown formatting
        run: |
          npx prettier --check "**/*.md" || (echo "Please run 'npx prettier --write \"**/*.md\"' to format your markdown files" && exit 1)

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: 'go.mod'

      - name: Download dependencies
        run: go mod download

      - name: Run fast tests
        if: ${{ github.event_name != 'push' || github.ref != 'refs/heads/main' }}
        run: go test -v -race ./internal/...

      - name: Run tests and generate coverage (push to main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: go test -v -race ./internal/... -covermode=atomic -coverprofile=coverage.out

      - name: Install Qlty Cloud
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: qltysh/qlty-action/install@a19242102d17e497f437d7466aa01b528537e899

      - name: Upload coverage to Qlty Cloud
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: qltysh/qlty-action/coverage@a19242102d17e497f437d7466aa01b528537e899
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: coverage.out
          strip-prefix: github.com/Arm/remoteproc-runtime

      - name: Download Remoteproc Simulator
        uses: robinraju/release-downloader@daf26c55d821e836577a15f77d86ddc078948b05 # v1.12
        with:
          repository: arm/remoteproc-simulator
          latest: true
          fileName: remoteproc-simulator_*_linux_amd64.tar.gz
          out-file-path: remoteproc-simulator
          extract: true

      - name: Install Remoteproc Simulator
        run: echo "$PWD/remoteproc-simulator" >> $GITHUB_PATH

      - name: Set up Lima
        uses: lima-vm/lima-actions/setup@03b96d61959e83b2c737e44162c3088e81de0886 # v1.0.1
        id: lima-actions-setup

      - name: Cache ~/.cache/lima
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/lima
          key: lima-${{ steps.lima-actions-setup.outputs.version }}

      - name: Run e2e tests
        run: go test -v ./e2e/...
